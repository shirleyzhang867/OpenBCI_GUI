We are so happy to announce the release of v3.2.0 of the OpenBCI GUI! The latest release not only patches some bugs but also adds several long requested new widgets! Hackers to researchers all asked for easier access to the breakout pins on top of the Cyton to hook push buttons into Digital Inputs or photoresistors for Analog Inputs (for ERPs). Now, running the latest Cyton firmware, you can read from Digital or Analog Inputs with the click of a button in this new GUI release. The Digital and Analog pins are read from and injected into each data packet and eventually make their way to the OpenBCI output text file. This means you can now do ERP (Event Related Potential) research with no extra effort! We LOVE this new feature, so much so, that we made some really cool new widgets to display the Analog or Digital Inputs in real time within the GUI. Notable bugs squashed was Ganglion not usable on macOS 10.13 and Cyton SD cards could not be started from the GUI.

The newest and best GUI is using the brand new OpenBCIHub v1.3.9. We changed the name of the hub on github from OpenBCI_Ganglion_Electron to just OpenBCI_Hub. Say goodbye to the cat logo on the hub; we finally found the problem with loading the spiffy OpenBCI Cog wheel logo into the toolbar.

The WiFi Shield firmware hits v2.0.0. New features are UDP support, UDP Burst support (send every packet three times), and WiFi Direct support. In the actual github repo, we did a docs (code of conduct, roadmap, contributing, readme) overhaul and are really excited to see people contributing! UDP adds stability on low end or busy networks, some users found their WiFi shields missing data or crashing all together because of TCP! If you want to use TCP and don’t have a great network or are at a university, use WiFi direct mode. You connect your computer directly to the WiFi Shield’s hotspot, and use then use the OpenBCI GUI. It’s that simple. If you want to hook the shield to your wireless network, join the WiFi Shield’s hotspot and go to `192.168.4.1/wifi` in your browser. There you pass in your network credentials. To erase your network credentials and go back to WiFi Direct mode or use another WiFi network, use the GUI.

Providing support to the new OpenBCIHub v1.3.9 we released v0.4.1 of the WiFi NodeJS driver. This adds examples of WiFi Direct and support for UDP and UDP Burst mode. We also started initializing both the TCP and UDP engines on startup so the user can swap between protocols without having to destroy and remake a wifi object!

We drastically reduced the package size of the JavaScript Utilities module in the latest release, v0.3.1. We changed the name of our JavaScript utilities module to reflect that it can now be used in both NodeJS and in any major web browser. The repository used to be called OpenBCI_NodeJS_Utilities but is now called OpenBCI_JavaScript_Utilities. You can use OpenBCI on the web faster than ever.

The main NodeJS repository hits v3.0.0 and now with a simple ‘npm install openbci’ you have access to all OpenBCI boards over any physical transfer method such as WiFi or Bluetooth. 

The OpenBCI Python driver is in the middle of an overhaul to hit v1.0.0 has hit it’s first Alpha release. We are working to add automated testing, continuous integration, new docs, and eventually add to the python package index so all you have to do is ‘pip install openbci’ to use all three biosensors. The v1.0.0 also features a high speed driver for the WiFi Shield. We recognize how the WiFi shield users want to stay in python and want high stable transfer rates. We are building this new high speed driver from the ground up to be stable, reliable, and work perfectly every time. We need help from the community to validate this driver!
